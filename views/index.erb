<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Test Homepage</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css">
  <script defer src="https://code.getmdl.io/1.3.0/material.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
</head>
<style>
  body {
    text-align: center;
  }

  .mdl_card {
    max-width: 500px;
    text-align: center;
    margin: auto;
  }

  #result {
    text-align: center;
  }

  .mdl-card__supporting-text {
    color: #333;
  }
</style>

<body>
  <div class="mdl-grid">

    <div id="result" class="mdl-cell mdl-cell--6-col">
      <div class="mdl_card mdl-shadow--4dp">
        <div class="mdl-card__supporting-text">
          <div id="pidSpinner" class="mdl-spinner mdl-js-spinner is-active"></div>
          <div id="pidInfo">
            <h3 id="pid">PID STATUS: Loading...</h3>
            <h3 id="sv">SV: Loading...</h3>
            <h3 id="pv">PV: Loading...</h3>
          </div>
        </div>
      </div>
    </div>

    <div id="result" class="mdl-cell mdl-cell--6-col">
      <div class="mdl_card mdl-shadow--4dp">
        <div class="mdl-card__supporting-text">
          <div id="relaySpinner" class="mdl-spinner mdl-js-spinner is-active"></div>
          <div id="relayInfo">
            <h3 id="hltToMash">hltToMash: Loading...</h3>
            <h3 id="hlt">hlt: Loading...</h3>
            <h3 id="rimsToMash">rimsToMash: Loading...</h3>
            <h3 id="pump">pump: Loading...</h3>
          </div>
        </div>
      </div>
    </div>

    <div class="mdl-cell mdl-cell--12-col" style="height: 500px;">
      <canvas id="pvChart"></canvas>
    </div>

  </div>
</body>
<script type="text/javascript">
  var labels = [];
  var data = [];

  pidInfo.style.display = "none";
  relayInfo.style.display = "none";


  var pidsource = new EventSource("/pid");
  pidsource.addEventListener('pid_status', function (event) {
    var result = JSON.parse(event.data);
    console.log(data);
    pid.innerText = "PID: " + (result.pid_running ? 'ON' : 'OFF');
    sv.innerText = "SV: " + result.sv + '\u00B0F';
    pv.innerText = "PV: " + result.pv + '\u00B0F';
    data.push(result.pv);
    labels.push(moment().format());
    if (data.length > 20) {
      data.shift();
      labels.shift();
    }
    myChart.update();
    pidSpinner.style.display = "none";
    pidInfo.style.display = "initial";
  }, false);

  var relaysource = new EventSource("/relays");
  relaysource.addEventListener('relays_status', function (event) {
    var data = JSON.parse(event.data);
    console.log(data);
    hltToMash.innerText = "HLT: " + (Boolean(data.hltToMash) ? 'mash' : 'boil');
    hlt.innerText = "HLT: " + (Boolean(data.hlt) ? 'open' : 'closed');
    rimsToMash.innerText = "RIMS: " + (Boolean(data.rimsToMash) ? 'mash' : 'boil');
    pump.innerText = "PUMP: " + (Boolean(data.pump) ? 'on' : 'false');
    relaySpinner.style.display = "none";
    relayInfo.style.display = "initial";
  }, false);

  var ctx = document.getElementById("pvChart").getContext('2d');
  var myChart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: labels,
      datasets: [{
        label: "PV",
        tension: 0,
        fill: true,
        backgroundColor: "rgba(0, 0, 0, 0.5)",
        borderColor: "#333",
        data: data,
      }]
    },
    options: {
      maintainAspectRatio: false,
      scales: {
        xAxes: [{
          type: "time",
          time: {
            format: 'HH:mm:ss',
            tooltipFormat: 'HH:mm:ss'
          },
          ticks: {
            autoSkip: true,
            maxTicksLimit: 10
          },
          scaleLabel: {
            display: true,
            labelString: 'Time'
          }
        },],
        yAxes: [{
          scaleLabel: {
            display: true,
            labelString: 'PV Value'
          }
        }]
      }
    }
  });

</script>

</html>